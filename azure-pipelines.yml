trigger:
  branches:
    include:
    - main

resources:
- repo: self
  clean: true

stages:
- stage: Build
  displayName: Build Images + Push to ACR
  jobs:  
  - job: Build
    displayName: Build
    pool: $(AGENT_POOL_NAME)
    steps:
    - task: CmdLine@2
      displayName: Create .env file
      inputs:
        script: ren .env.template .env
    - task: DockerCompose@0
      displayName: "Build Images"
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'MVPSiteV2'
        dockerComposeFile: '**/docker-compose.yml'
        additionalDockerComposeFiles: 'docker-compose.override.yml'
        dockerComposeFileArgs: '$(DOCKER_COMPOSE_ARGS)'
        qualifyImageNames: false
        action: 'Build services'
        additionalImageTags: '$(Build.BuildNumber)-$(Build.SourceBranchName)'
        includeLatestTag: true
    - task: DockerCompose@0
      displayName: "Push Images with Latest Tag"
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: '$(AZURE_SUBSCRIPTION)'
        azureContainerRegistry: '$(AZURE_CONTAINER_REGISTRY)'
        dockerComposeFile: '**/docker-compose.yml'
        additionalDockerComposeFiles: 'docker-compose.override.yml'
        dockerComposeFileArgs: '$(DOCKER_COMPOSE_ARGS)'
        action: 'Push services'
        additionalImageTags: '$(Build.BuildNumber)-$(Build.SourceBranchName)'
        includeLatestTag: true
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    - task: CopyFiles@2
      displayName: "Copy K8s specifications to staging directory"
      inputs:
        SourceFolder: 'k8s/specs'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/k8s-specs'
        CleanTargetFolder: true
    - task: CopyFiles@2
      displayName: "Copy Serialisation assets to staging directory"
      inputs:
        SourceFolder: './'
        Contents: |
          sitecore.json
          src/**/*.module.json
          src/**/items/**
          .config/dotnet-tools.json
        TargetFolder: '$(Build.ArtifactStagingDirectory)/serialization'
        CleanTargetFolder: true
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.ArtifactsDirectory)'
        artifact: 'Sitecore.MVP-$(Build.BuildNumber)'
